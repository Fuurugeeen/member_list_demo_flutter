# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.mocks.dart"
    - "**/generated_plugin_registrant.dart"
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true

linter:
  rules:
    # Style rules
    prefer_single_quotes: true
    prefer_const_constructors: true
    prefer_const_declarations: true
    prefer_final_fields: true
    prefer_final_locals: true
    prefer_final_in_for_each: true
    sort_constructors_first: true
    sort_unnamed_constructors_first: true
    prefer_relative_imports: true
    
    # Design rules
    avoid_void_async: true
    avoid_unnecessary_containers: true
    avoid_empty_else: true
    avoid_print: true
    avoid_web_libraries_in_flutter: true
    use_key_in_widget_constructors: true
    
    # Documentation rules
    public_member_api_docs: false  # Disable for demo project
    
    # Error prone rules
    avoid_dynamic_calls: true
    avoid_slow_async_io: true
    cancel_subscriptions: true
    close_sinks: true
    literal_only_boolean_expressions: true
    no_adjacent_strings_in_list: true
    test_types_in_equals: true
    throw_in_finally: true
    unnecessary_statements: true
    
    # Performance rules
    prefer_interpolation_to_compose_strings: true
    use_string_buffers: true
    
    # Security rules
    avoid_catching_errors: true
